# from typing import Literal, TypeAlias
# from urllib.request import urlopen
# import json
# from datetime import datetime
# from enum import IntEnum
# from main import *
# from dataclasses import dataclass
# from coordinates import Coordinates
# from api_service import get_weather
#
# Celsius: TypeAlias = float
open_weather_token = "c500bc16a2a3fcd99f919fe8344f7d39"
bot = Bot(token="6097339357:AAG-2fL7KWY-HHzmjvs7n2uh8KLGjI2piNQ", parse_mode="HTML")
# class Coordinates:
#     latitude: float
#     longitude: float
# def _get_ip_data() -> dict:
#     url = 'https://ipinfo.io/json'
#     response = urlopen(url)
#     return json.load(response)
# def get_coordinates() -> Coordinates:
#     "Returns current coordinates using ID adresss"
#     data = _get_ip_data()
#     latitude = data['loc'].split(',')[0]
#     longitude = data['loc'].split(',')[1]
#
#     return Coordinates(latitude=latitude, longitude=longitude)
# class WindDirection(IntEnum):
#     North = 0
#     Northeast = 45
#     East = 90
#     Southeast = 135
#     South = 180
#     West = 270
#     Northwest = 315
# def _parse_wind_direction(openweather_dict: dict) -> str:
#     degrees = openweather_dict['wind']['deg']
#     degrees= round(degrees/45) * 45
#     if degrees == 360:
#         degrees = 0
#     return WindDirection(degrees).name
# @dataclass(slots=True, frozen=True)
# class Weather:
#     location: str
#     temperature: Celsius
#     temperature_feeling: Celsius
#     descripton: str
#     wind_speed: float
#     wind_direction: str
#     sunrise: datetime
#     sunset: datetime
# def weather() -> str:
#     weather = get_weather(get_coordinates())
#     return f'Temperature is {weather.temperature}Â°C, feels like {weather.temperature_feeling}Â°C'
# def wind() -> str:
#     weather = get_weather(get_coordinates())
#     return f'{weather.wind_direction} wind {weather.wind_speed} m/s'
# def sun_time() -> str:
#     weather = get_weather(get_coordinates())
#     return f'Sunrise: {weather.sunrise.strftime("%H:%M")}\n' \
#            f'Sunset: {weather.sunset.strftime("%H:%M")}\n'
